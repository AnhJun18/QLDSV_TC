<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>